name: Run unit tests

on:
  push:
    # except any tags
    tags:
      - '!refs/tags/*'
    branches:
      - main
      - 'refs/heads/feature/*'
      - 'refs/heads/bugfix/*'
  pull_request:
    branches:
      - main

jobs:
  run_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
      - name: Test with pytest and coverage
        run: |
          coverage run

      - name: Create coverage report
        run: |
          coverage report

      - name: Create HTML report
        run: |
          coverage html --directory=coverage_html_report/report-${{ matrix.os }}-${{ matrix.python-version }}
     
      - name: Upload coverage results
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report-${{ matrix.os }}-${{ matrix.python-version }}
          path: coverage_html_report/report-${{ matrix.os }}-${{ matrix.python-version }}
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}